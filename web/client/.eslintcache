[{"C:\\Users\\DELL\\Desktop\\web\\web\\client\\src\\index.js":"1","C:\\Users\\DELL\\Desktop\\web\\web\\client\\src\\App.js":"2","C:\\Users\\DELL\\Desktop\\web\\web\\client\\src\\reportWebVitals.js":"3","C:\\Users\\DELL\\Desktop\\web\\web\\client\\src\\components\\routing\\PrivateRoute.js":"4","C:\\Users\\DELL\\Desktop\\web\\web\\client\\src\\components\\screens\\RegisterScreen.js":"5","C:\\Users\\DELL\\Desktop\\web\\web\\client\\src\\components\\screens\\Registeradmin.js":"6"},{"size":565,"mtime":1647620657125,"results":"7","hashOfConfig":"8"},{"size":764,"mtime":1648503006370,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1647614947571,"results":"10","hashOfConfig":"8"},{"size":389,"mtime":1647614947555,"results":"11","hashOfConfig":"8"},{"size":6599,"mtime":1647797764141,"results":"12","hashOfConfig":"8"},{"size":6601,"mtime":1648502955355,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"111n41i",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\DELL\\Desktop\\web\\web\\client\\src\\index.js",[],["29","30"],"C:\\Users\\DELL\\Desktop\\web\\web\\client\\src\\App.js",["31"],"import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n// Routing\r\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\n\r\n\r\n\r\n// Screens\r\n\r\nimport RegisterScreen from \"./components/screens/RegisterScreen\";\r\n\r\n\r\n\r\n\r\n\r\nimport RegisterScreenp from \"./components/screens/Registeradmin\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <Route exact path=\"/registerp\" component={RegisterScreenp} />\r\n          <Route exact path=\"/register\" component={RegisterScreen} />\r\n          \r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\DELL\\Desktop\\web\\web\\client\\src\\reportWebVitals.js",[],"C:\\Users\\DELL\\Desktop\\web\\web\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\DELL\\Desktop\\web\\web\\client\\src\\components\\screens\\RegisterScreen.js",["32","33"],"import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./RegisterScreen.css\";\r\n\r\n\r\nconst RegisterScreen = ({ history }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\r\n  const [firstname, setfirstname] = useState(\"\");\r\n  const [lastname, setlastname] = useState(\"\");\r\n  const [contactnumber, setcontactnumber] = useState(\"\");\r\n  const [dob, setdob] = useState(\"\");\r\n  const [addr, setaddr] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [ppp,setppp]=useState(\"\");\r\n  const [number,setnumber] = useState(\"\");\r\n\r\n  const registerHandlerp = async (e) =>{\r\n    e.preventDefault();\r\n\r\n    const config = {\r\n      header: {\r\n        \"Content-Type\": \"application/json\",\r\n      },};\r\n      try{\r\n      const data = {email,contactnumber}\r\n    axios\r\n      .post('/api/auth/email',data)\r\n      .then(res => {\r\n        console.log(res.data)\r\n        \r\n    \r\n      setppp(res.data.msg)\r\n      console.log(ppp)})\r\n    } catch (error) {\r\n    setError(error.response.data.error);\r\n    setTimeout(() => {\r\n      setError(\"\");\r\n    }, 5000);\r\n  }\r\n  }\r\n  const registerHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const config = {\r\n      header: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    console.log(contactnumber.substring(0,5))\r\n    if(number != contactnumber.substring(0,5))\r\n    {\r\n      return setError(\"wrong num\");\r\n    }\r\n    \r\n    \r\n    \r\n    if (password !== confirmpassword) {\r\n      setPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n      return setError(\"Passwords do not match\");\r\n    }\r\n\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"/api/auth/register\",\r\n        {\r\n          firstname,\r\n          lastname,\r\n          username,\r\n          email,\r\n          password,\r\n          contactnumber,\r\n          dob,\r\n          addr\r\n        },\r\n        config\r\n      );\r\n\r\n      \r\n\r\n      localStorage.setItem(\"authToken\", data.token);\r\n\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      setError(error.response.data.error);\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-screen\">\r\n      <div className= \"my-5\">\r\n      <h1 className = \"text-center\"> Login </h1> \r\n    </div>\r\n    \r\n      <form onSubmit={registerHandler} className=\"register-screen__form\">\r\n        <h3 className=\"register-screen__title\">Register</h3>\r\n        {error && <span className=\"error-message\">{error}</span>}\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"confirmpassword\">First Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            id=\"firstname\"\r\n            \r\n            placeholder=\"first name\"\r\n            value={firstname}\r\n            onChange={(e) => setfirstname(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"confirmpassword\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            \r\n            \r\n            placeholder=\"last name\"\r\n            value={lastname}\r\n            onChange={(e) => setlastname(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Username:</label>\r\n          <input\r\n            type=\"text\"\r\n            \r\n            placeholder=\"Enter username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            required\r\n            id=\"email\"\r\n            placeholder=\"Email address\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            id=\"password\"\r\n            autoComplete=\"true\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"confirmpassword\">Confirm Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            id=\"confirmpassword\"\r\n            autoComplete=\"true\"\r\n            placeholder=\"Confirm password\"\r\n            value={confirmpassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"confirmpassword\">contact number:</label>\r\n          <input\r\n            type=\"text\"\r\n            \r\n            \r\n            placeholder=\"enter contact number \"\r\n            value={contactnumber}\r\n            onChange={(e) => setcontactnumber(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"confirmpassword\">Date of Birth:</label>\r\n          <input\r\n            type=\"date\"\r\n            \r\n            \r\n            \r\n            value={dob}\r\n            onChange={(e) => setdob(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"confirmpassword\">Address</label>\r\n          <input\r\n            type=\"text\"\r\n            \r\n            \r\n            placeholder=\"enter address\"\r\n            value={addr}\r\n            onChange={(e) => setaddr(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"confirmpassword\">Address</label>\r\n          <input\r\n            type=\"integer\"\r\n            \r\n            \r\n            placeholder=\"enter address\"\r\n            value={number}\r\n            onChange={(e) => setnumber(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Register\r\n        </button>\r\n        <button onClick={registerHandlerp}type=\"submit\" className=\"btn btn-primary\">\r\n          Registerp\r\n        </button>\r\n\r\n        <span className=\"register-screen__subtext\">\r\n          Already have an account? <Link to=\"/login\">Login</Link>\r\n        </span>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","C:\\Users\\DELL\\Desktop\\web\\web\\client\\src\\components\\screens\\Registeradmin.js",["34","35"],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":4,"column":8,"nodeType":"42","messageId":"43","endLine":4,"endColumn":20},{"ruleId":"40","severity":1,"message":"44","line":24,"column":11,"nodeType":"42","messageId":"43","endLine":24,"endColumn":17},{"ruleId":"45","severity":1,"message":"46","line":54,"column":15,"nodeType":"47","messageId":"48","endLine":54,"endColumn":17},{"ruleId":"40","severity":1,"message":"44","line":24,"column":11,"nodeType":"42","messageId":"43","endLine":24,"endColumn":17},{"ruleId":"45","severity":1,"message":"46","line":54,"column":15,"nodeType":"47","messageId":"48","endLine":54,"endColumn":17},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'PrivateRoute' is defined but never used.","Identifier","unusedVar","'config' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]